{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst useFetch = url => {\n  _s();\n\n  //Each object represent a blog\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  useEffect(() => {\n    fetch(url).then(res => {\n      if (res.ok === false) {\n        throw Error('Could not fetch the data');\n      }\n\n      return res.json();\n    }).then(data => {\n      setData(data);\n      setIsPending(false);\n    }).catch(err => {\n      setIsPending(false);\n      setError(err.message);\n    });\n    setError(null);\n  }, [url]);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n\n_s(useFetch, \"RG7geX7o/76PnTYec+FAhGpDNXA=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/home/avihay/Desktop/reactblog/src/useFetch.js"],"names":["useState","useEffect","useFetch","url","data","setData","error","setError","isPending","setIsPending","fetch","then","res","ok","Error","json","catch","err","message"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAU;AAAA;;AACnB;AACJ,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,IAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,KAAK,CAACP,GAAD,CAAL,CACKQ,IADL,CACUC,GAAG,IAAI;AACT,UAAGA,GAAG,CAACC,EAAJ,KAAW,KAAd,EAAoB;AAChB,cAAMC,KAAK,CAAC,0BAAD,CAAX;AACH;;AACD,aAAOF,GAAG,CAACG,IAAJ,EAAP;AAAmB,KAL3B,EAMKJ,IANL,CAMWP,IAAD,IAAU;AACZC,MAAAA,OAAO,CAACD,IAAD,CAAP;AAEAK,MAAAA,YAAY,CAAC,KAAD,CAAZ;AAAqB,KAT7B,EAUKO,KAVL,CAUYC,GAAD,IAAS;AACZR,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,MAAAA,QAAQ,CAACU,GAAG,CAACC,OAAL,CAAR;AAAsB,KAZ9B;AAaQX,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACP,GAfI,EAeH,CAACJ,GAAD,CAfG,CAAT;AAgBI,SAAO;AAACC,IAAAA,IAAD;AAAOI,IAAAA,SAAP;AAAkBF,IAAAA;AAAlB,GAAP;AACP,CAvBD;;GAAMJ,Q;;AAyBN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useFetch = (url ) => {\n        //Each object represent a blog\n    const [data, setData] = useState(null);\n    const [error, setError] = useState(null);\n    const [isPending, setIsPending] = useState(true);\n\n    useEffect(() => {\n        fetch(url)\n            .then(res => {\n                if(res.ok === false){\n                    throw Error('Could not fetch the data');\n                }\n                return res.json();})\n            .then((data) => {\n                setData(data);\n                \n                setIsPending(false);})\n            .catch((err) => {\n                setIsPending(false)\n                setError(err.message)});\n                setError(null)\n        },[url]);\n        return {data, isPending, error}\n}\n \nexport default useFetch;\n"]},"metadata":{},"sourceType":"module"}